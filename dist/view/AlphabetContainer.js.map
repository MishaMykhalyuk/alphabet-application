{"version":3,"sources":["../../src/view/AlphabetContainer.js"],"names":["Ext","define","extend","requires","treeLettersCount","layout","initComponent","grid","create","region","viewConfig","plugins","ptype","dragGroup","dropGroup","dragText","listeners","drop","element","records","store","sort","dropItems","tree","width","sortOnDrop","forceRemoveSelectedLetters","getRange","items","callParent","setData","slice"],"mappings":"AAAAA,IAAIC,MAAJ,CAAW,iCAAX,EAA8C;AAC5CC,UAAQ,wBADoC;AAE5CC,YAAU,CAAC,4BAAD,EAA+B,iCAA/B,EAAkE,yBAAlE,CAFkC;AAG5CC,oBAAkB,EAH0B;AAI5CC,UAAQ,QAJoC;;AAM5CC,eAN4C,2BAM5B;AACd,QAAMC,OAAOP,IAAIQ,MAAJ,CAAW,iCAAX,EAA8C;AACzDC,cAAQ,QADiD;AAEzDC,kBAAY;AACVC,iBAAS;AACPC,iBAAO,kBADA;AAEPC,qBAAW,iBAFJ;AAGPC,qBAAW,iBAHJ;AAIPC,oBAAU;AAJH,SADC;AAOVC,mBAAW;AACTC,cADS,gBACJC,OADI,QACkB;AAAA,gBAAXC,OAAW,QAAXA,OAAW;;AACzB,iBAAKC,KAAL,CAAWC,IAAX;AACAd,iBAAKe,SAAL,CAAeH,OAAf;AACD;AAJQ;AAPD;AAF6C,KAA9C,CAAb;;AAkBA,QAAMI,OAAOvB,IAAIQ,MAAJ,CAAW,4BAAX,EAAyC;AACpDC,cAAQ,MAD4C;AAEpDe,aAAO,KAF6C;AAGpDd,kBAAY;AACVC,iBAAS;AACPC,iBAAO,kBADA;AAEPC,qBAAW,iBAFJ;AAGPC,qBAAW,iBAHJ;AAIPC,oBAAU,yBAJH;AAKPU,sBAAY;AALL,SADC;AAQVT,mBAAW;AACTC,cADS,kBACF;AACLV,iBAAKmB,0BAAL;AACD;AAHQ;AARD;AAHwC,KAAzC,CAAb;AAkBA,QAAMP,UAAUnB,IAAIQ,MAAJ,CAAW,yBAAX,EAAsCmB,QAAtC,EAAhB;;AAEA,SAAKC,KAAL,GAAa,CAACL,IAAD,EAAOhB,IAAP,CAAb;AACA,SAAKsB,UAAL;;AAEAN,SAAKO,OAAL,CAAaX,QAAQY,KAAR,CAAc,CAAd,EAAiB,KAAK3B,gBAAtB,CAAb;AACAG,SAAKuB,OAAL,CAAaX,QAAQY,KAAR,CAAc,KAAK3B,gBAAnB,CAAb;AACD;AAlD2C,CAA9C","file":"AlphabetContainer.js","sourcesContent":["Ext.define('Alphabet.view.AlphabetContainer', {\n  extend: 'Ext.container.Viewport',\n  requires: ['Alphabet.view.AlphabetTree', 'Alphabet.view.AlphabetGridPanel', 'Alphabet.store.Alphabet'],\n  treeLettersCount: 10,\n  layout: 'border',\n\n  initComponent() {\n    const grid = Ext.create('Alphabet.view.AlphabetGridPanel', {\n      region: 'center',\n      viewConfig: {\n        plugins: {\n          ptype: 'gridviewdragdrop',\n          dragGroup: 'grid-items-zone',\n          dropGroup: 'tree-items-zone',\n          dragText: 'Move letter to the tree',\n        },\n        listeners: {\n          drop(element, { records }) {\n            this.store.sort();\n            grid.dropItems(records);\n          },\n        },\n      },\n    });\n\n    const tree = Ext.create('Alphabet.view.AlphabetTree', {\n      region: 'west',\n      width: '35%',\n      viewConfig: {\n        plugins: {\n          ptype: 'treeviewdragdrop',\n          dragGroup: 'tree-items-zone',\n          dropGroup: 'grid-items-zone',\n          dragText: 'Move letter to the grid',\n          sortOnDrop: true,\n        },\n        listeners: {\n          drop() {\n            grid.forceRemoveSelectedLetters();\n          },\n        },\n      },\n    });\n    const records = Ext.create('Alphabet.store.Alphabet').getRange();\n\n    this.items = [tree, grid];\n    this.callParent();\n\n    tree.setData(records.slice(0, this.treeLettersCount));\n    grid.setData(records.slice(this.treeLettersCount));\n  },\n});\n"]}